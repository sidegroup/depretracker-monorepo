continue
 target_columns.all? { |target| target.to_i.between?(0, original_file.first_line.split(separator).size-1) }
continue
 target_columns.all? { |target| target.to_i.between?(0, original_file.first_line.split(separator).size-1) }
target_columns
continue
target_columns
target_colums
target_columns.all?
target_columns.all? { |target| target.to_i.between?(0, original_file.first_line.split(separator).size-1) }
continue
ls
self.separators
separators
original_file.first_line.split(",").size
original_file.first_line.split(",")
)
original_file.first_line.split(","
original_file.first_line
original_file.lines
original_file
exit
continue
original_file
original_file.lines
target_columns.present?
target_columnstarget_columns.present?
target_columns
exit
continue
targets
targets.all? { |target| target.to_i.between?(0, original.split(separator).size-1) }
original.split(separator).size
original.split(seperator).size
separator
seprator
continue
subject.errors.messages
subject.errors
subject.valid?
subject
exit
translation.targets.first.to_i.to_s
translation.targets.first.to_i
exit
translation.targets.first.to_i.to_s
translation.targets.first.to_i
translation.targets.first
translation
exit
translation
translation.errors.messages
continue
translation.errors.messages
continue
original
separator
continue
translation.separator
exit
translation.separator
translation.valid?
translation.separator = "\t"
translation.separator.value
translation.separator
translation.errors.messages
translation.valid?
translation.separator = Translation.separators.values.sample
continue
Translation.separators.values.sample
translation.separator
translation.errors.messages
translation.valid?
exit
translation.errors
translation.errors.count
translation.errors.first
translation.errors
exit
Translation.separators.values.sample
",".in? Translation.separators.values
Translation.separators.values.contains(',')
Translation.separators.values.contains(','
Translation.separators.values.sample
Translation.separators.values
Translation.separators
exit
original
original.split(separator).size
Translation.separators.values
separators.values
separator
exit
separator
seperator
validator
exit
continue
Translation.separators.values.sample
Translation.separators.keys.sample
separator
continue
separator
exit
continue
targets
continue
targets
continue
targets
continue
targets
exit
continue
targets.first.to_i
targets.first
self
targets
exit
continue
targets
continue
targets
exit
continue
targets
target
t
